spring:
  application:
    name: ravine

logging:
  level:
    org.apache.kafka.clients.consumer.ConsumerConfig: WARN
    org.apache.kafka.clients.producer.ProducerConfig: WARN
    io.github.otaviof.ravine: TRACE

management:
  endpoint:
    prometheus:
      enabled:  true
    metrics:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    export:
      prometheus:
        enabled: true

ravine:
  startup:
    timeoutMs: 60000
    checkIntervalMs: 1500
  kafka:
    schemaRegistryUrl: http://schemaregistry.localtest.me:8681
    brokers: kafka.localtest.me:9092
  routes:
    - name: post-endpoint-example
      endpoint:
        path: /v1/group/app/action/post
        methods:
          - post
      subject:
        name: person
      request:
        topic: kafka_request_topic
        valueSerde: io.confluent.kafka.streams.serdes.avro.GenericAvroSerializer
        timeoutMs: 2000
      response:
        topic: kafka_response_topic
        timeoutMs: 5000
    - name: put-endpoint-example
      endpoint:
        path: /v1/group/app/action/put
        methods:
          - put
        response:
          httpCode: 201
          contentType: application/json
          body: |
            { "msg": "record created!" }
      subject:
        name: person
      request:
        topic: kafka_dump_topic
        timeoutMs: 2000
        valueSerde: io.confluent.kafka.streams.serdes.avro.GenericAvroSerializer


---
logging:
  level:
    io.github.otaviof: TRACE
ravine:
  startup:
    timeoutMs: 60000
    checkIntervalMs: 1500
  cache:
    maximumSize: 2500
    expireMs: 15000
  kafka:
    schemaRegistryUrl: http://schemaregistry.localtest.me:8681
    brokers: kafka.localtest.me:9092
    properties:
      retry.backoff.ms: 150
  routes:
    - name: get-endpoint-example
      endpoint:
        path: /v1/group/app/action/get
        methods:
          - get
        response:
          httpCode: 200
          contentType: application/json
      request:
        topic: kafka_get_request_topic
        valueSerde: io.confluent.kafka.streams.serdes.avro.GenericAvroSerializer
        timeoutMs: 5000
      response:
        topic: kafka_get_response_topic
        timeoutMs: 10000
    - name: post-endpoint-example
      endpoint:
        path: /v1/group/app/action/post
        methods:
          - post
        response:
          httpCode: 200
          contentType: application/json
      subject:
        name: person
      request:
        topic: kafka_request_topic
        valueSerde: io.confluent.kafka.streams.serdes.avro.GenericAvroSerializer
        timeoutMs: 5000
      response:
        topic: kafka_response_topic
        timeoutMs: 10000
    - name: put-endpoint-example
      endpoint:
        path: /v1/group/app/action/put
        methods:
          - put
        response:
          httpCode: 201
          contentType: application/json
          body: |
            { "msg": "record created!" }
      subject:
        name: person
      request:
        topic: kafka_dump_topic
        timeoutMs: 5000
        valueSerde: io.confluent.kafka.streams.serdes.avro.GenericAvroSerializer
